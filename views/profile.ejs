<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/swei.css">
    <title>Profile</title>
  </head>

<body>
  <%- include('./partials/nav.ejs') %>
  
  <main class="content profile">
    <h1>Welcome, <%= user.username %></h1>
    <div class="exp-bar">
      <div class="exp-bar-fill" style="width: <%= (user.exp / expTable[user.level - 1]) * 100 %>%;"></div>
    </div>
    <p>Level: <%= user.level %></p>
    <p>EXP: <%= user.exp %> / <%= expTable[user.level - 1] %></p>
    <p>Total Exp: <%= user.totalExp %></p>

    <div class="profile-container">
      <div class="profile-left">
        <div class="friends-section">
          <h2>Friends</h2>
          <% if (user.friends.length === 0) { %>
            <p>No friends for now ;)</p>
          <% } else { %>
            <ul class="friends-list" id="friendsList">
              <% user.friends.forEach(friend => { %>
                <li class="friend" data-level="<%= friend.level %>">
                  <span class="friend-username"><%= friend.username %></span>, 
                  Level: <span class="friend-level"><%= friend.level %></span>
                  <form class="delete-friend-form" action="/profile/delete-friend/<%= friend._id %>" method="POST" style="display:inline;">
                    <button type="submit" class="delete-friend-button" aria-label="Delete friend <%= friend.username %>">Delete</button>
                  </form>
                </li>
              <% }) %>
            </ul>
          <% } %>
        </div>
      </div>
      
      
      <div class="profile-right">
        <div class="requests-section">
          <h2>Friend Requests</h2>
          <% if (user.friendRequests.length === 0) { %>
            <p class="no-requests">No friend requests</p>
          <% } else { %>
            <ul class="friend-requests">
              <% user.friendRequests.forEach(request => { %>
                <li>
                  <%= request.username %>
                  <div class="request-buttons">
                    <form class="friend-request-form" action="/profile/accept-friend-request/<%= request._id %>" method="POST">
                      <button type="submit" class="btn accept-btn">Accept</button>
                    </form>
                    <form class="friend-request-form" action="/profile/reject-friend-request/<%= request._id %>" method="POST">
                      <button type="submit" class="btn reject-btn">Reject</button>
                    </form>
                  </div>
                </li>
              <% }) %>
            </ul>
          <% } %>

          <% if (typeof success_msg !== 'undefined') { %>
            <div class="alert alert-success"><%= success_msg %></div>
          <% } %>
          <% if (typeof error_msg !== 'undefined') { %>
            <div class="alert alert-danger"><%= error_msg %></div>
          <% } %>

          <h2>Send Friend Request</h2>
          <form id="friend-request-form" action="/profile/send-friend-request" method="POST">
            <label for="friendUsername">Friend's Username:</label>
            <input type="text" id="friendUsername" name="friendUsername" required>
            <button type="submit" class="btn send-request-btn">Send Request</button>
          </form>
        </div>
      </div>
    </div>
  </main>

  <script>
    document.querySelectorAll('.friend-request-form').forEach(form => {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const url = form.action;
        
        try {
          await fetch(url, {
            method: 'POST',
            body: formData,
          });
          location.reload(); // Refresh the page
        } catch (err) {
          console.error('Error:', err);
          // Optionally show an error message to the user
        }
      });
    });

    
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      sortFriendsByLevel();
    });

    function sortFriendsByLevel() {
      const list = document.getElementById('friendsList');
      const friends = Array.from(list.getElementsByClassName('friend'));

      // Sort friends by level in descending order
      friends.sort((a, b) => b.dataset.level - a.dataset.level);

      // Re-append the sorted friends to the list
      friends.forEach(friend => list.appendChild(friend));
    }
  </script>


  <%- include('./partials/footer.ejs') %>
</body>
</html>
